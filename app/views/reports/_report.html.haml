.header
  %h2
    = render 'report_title', :report => report
  - unless SETTINGS.enable_read_only_mode
    %ul.actions
      - if report.kind == "inspect" and ! report.baseline?
        %li= link_to "Make Baseline", {:id => report, :action => "make_baseline"}, :method => :put, :confirm => 'Are you sure?', :class => "button"
      %li= link_to 'Destroy', report, :confirm => 'Are you sure?', :method => :delete, :class => "delete button"

.item
  - if report.kind == "inspect" and Report.baselines.any?
    .section
      %h3= "Compare with:"
      - form_tag({:id => report, :action => "diff"}, :id => "baseline_compare", :method => :get) do
        %p
          = radio_button_tag "baseline_type", "self", true
          = label_tag "baseline_type_self", "node's own baseline", :class => "inline"
          %br
          = radio_button_tag "baseline_type", "other"
          = label_tag "baseline_type_other", "specific baseline:", :class => "inline"
          = text_field_tag("baseline_host")
          = link_to_function('Compare', "jQuery('#baseline_compare').submit()", :class => "button")
      %script{:type => 'text/javascript'}
        \jQuery('#baseline_host').autocomplete({
        \  source: '#{baselines_reports_path :limit => 20, :format => :json}',
        \  minLength: 0,
        \  select: function(event, ui) {
        \    jQuery('#baseline_type_other').attr('checked', true)
        \  }
        \});
        \jQuery('#baseline_host').click(function() {
        \  jQuery('#baseline_host').autocomplete('search');
        \});
  - if report.resource_statuses.present?
    .section
      %h3
        Events
        %a{ :href => '#', :class => 'expand-all' } (expand all)
      .section
        %dl#baseline-diff-report
          - report.resource_statuses.sort_by(&:time).each_with_index do |status, index|
            %dt{:class => cycle( 'odd', 'even' )}
              %div.baseline-diff-item
                - if status.events.empty?
                  %span{:class => 'non-expandable-bullet'}= status.name
                - else
                  = link_to h(status.name), {}, {:class => 'expandable-link collapsed-link', :id => "expand-#{index}"}
              - if status.file or status.line
                = "(#{status.file}:#{status.line})"
            %dd.expandable.collapsed{:id => "expandable-#{index}"}
              %table
                %tr
                  %th Property
                  %th Message
                - status.events.each do |event|
                  %tr{:class => "status #{event.status}"}
                    %td= event.property
                    %td= popup_md5s( h event.message )
  .section
    %h3 Log
    .section
      %table.inspector
        %thead
          %tr
            %th Level
            %th Message
            %th Source
            %th File
            %th Line
            %th Time
        %tbody
          - if report.logs.present?
            = render :partial => 'puppet/util/logs/log', :collection => puppet_log_sorter(report.logs.compact)
          - else
            %td.empty{:colspan => 6}
              = describe_no_matches_for 'log messages', :report
  .section
    %h3 Metrics
    - if report.metrics.present?
      - report.metrics.group_by(&:category).sort.each do |category, metrics_in_category|
        .section
          %h4= category.titleize
          %table.inspector
            = render :partial => 'metrics/metrics_table', :locals => {:metrics => metrics_in_category}
    - else
      &mdash; No metrics in this report &mdash;
